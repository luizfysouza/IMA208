# -*- coding: utf-8 -*-
"""circum_sphere

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YncydsXf5p5nAbBU8vn3qlouo82Y8f18
"""

'''
Steps:
1. Read points
2. Delaunay triangulation
3. Radius of circum-sphere (for each triangle from the triangulation)
4. Filter out spheres whose R > t, where t is a threshold
5. Write triagles to the .stl file
'''

import numpy as np
from scipy.spatial import Delaunay
from scipy.spatial import distance

# (3D)
# Open the file and read the vertices as strings
with open("bunny.xyz", "r") as f:
    vertex_strings = f.readlines()

# Convert the vertex strings to a NumPy array of shape (N, 3)
points3D = np.zeros((len(vertex_strings), 3))
for i, vertex_str in enumerate(vertex_strings):
    vertex_arr = [float(coord) for coord in vertex_str.strip().split()]
    points3D[i] = vertex_arr

tri = Delaunay(points3D) # Compute the Delaunay triangulation

t = 0.001 # threshold
final_triangles = []
for tetra in tri.simplices:
    for k in range(len(tetra)):
        a = distance.euclidean(points3D[tetra[k%4]],points3D[tetra[(k+1)%4]])
        b = distance.euclidean(points3D[tetra[k%4]],points3D[tetra[(k+2)%4]])
        c = distance.euclidean(points3D[tetra[(k+1)%4]],points3D[tetra[(k+2)%4]])

        # Circumradius of a triangle
        R_aux = a*b*c/np.sqrt((a+b+c)*(b+c-a)*(c+a-b)*(a+b-c))

        # save the triangle if the circumradius is smaller than the threshold
        if R_aux < t:
            final_triangles.append(tetra)
            break
            
# Write triangles to the .stl file
with open("final_bunny.stl", "w") as file:
    file.write("solid bunny\n")
    for tetra in final_triangles:
        file.write("facet normal 0 0 0\n")
        file.write("\touter loop\n")
        for k in range(3):
            file.write("\t\tvertex " + str(points3D[tetra[k]][0]) + " " + str(points3D[tetra[k]][1]) + " " + str(points3D[tetra[k]][2]) + "\n")
        file.write("\tendloop\n")
        file.write("endfacet\n")          
    file.write("endsolid bunny\n")
print("Done!")